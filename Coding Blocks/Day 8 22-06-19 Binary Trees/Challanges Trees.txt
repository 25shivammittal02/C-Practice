#include<bits/stdc++.h>
using namespace std;

class Node{
public:
	int data;
	Node*left;
	Node*right;

	public:
		Node(int d){
			data = d;
			left = NULL;
			right = NULL;
		}
};

Node* buildTree(){
	int d;
    string L, R;
	cin>>d;
    Node*root = new Node(d);
    cin>>L; 
    if(L == "true"){
	    root->left = buildTree();
    }
    cin>>R;
	if(R == "true"){
	    root->right = buildTree();
	}
    if((L == "false") or (R == "false")){
        return root;
    }
    return root;
}

//preorder print
void printTree(Node*root){
	if(root == NULL){
		return;
	}
	cout<<root->data<<" ";
	printTree(root->left);
	printTree(root->right);
}

bool treeCheck(Node*root1, Node*root2){
    if(root1 == NULL and root2 == NULL){
        return true;
    }
    else if(root1 != NULL and root2 == NULL){
        return false;
    }
    else if(root1 == NULL and root2 !=NULL){
        return false;
    }
    return treeCheck(root1->left, root2->left) and treeCheck(root1->right, root2->right);
}

int main(int argc, char const *argv[])
{
	Node*root1 = buildTree();
    Node*root2 = buildTree();
    if(treeCheck(root1, root2)){
        cout<<"true";
    }
    else{
        cout<<"false";
    }
	return 0;
}